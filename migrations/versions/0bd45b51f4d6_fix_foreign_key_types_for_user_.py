"""Fix foreign key types for user references

Revision ID: 0bd45b51f4d6
Revises: 7c8e0a3a160a
Create Date: 2024-12-30 22:52:36.683108

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0bd45b51f4d6'
down_revision = '7c8e0a3a160a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('student_id', sa.String(length=20), nullable=False),
    sa.Column('department', sa.String(length=100), nullable=False),
    sa.Column('level', sa.String(length=50), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('student_id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('link', sa.String(length=255), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('activity_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('action', sa.String(length=100), nullable=False, server_default='unknown'))
        batch_op.add_column(sa.Column('ip_address', sa.String(length=45), nullable=True))
        batch_op.add_column(sa.Column('resource_type', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('resource_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('error_message', sa.Text(), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.VARCHAR(length=10),
               nullable=False)
        batch_op.drop_column('category')
        batch_op.drop_column('description')
        batch_op.drop_column('activity_type')

    with op.batch_alter_table('attendances', schema=None) as batch_op:
        batch_op.add_column(sa.Column('marked_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('marked_by_id', sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column('latitude', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('longitude', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('device_info', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.alter_column('student_id',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'students', ['student_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['marked_by_id'], ['id'])
        batch_op.drop_column('course_id')
        batch_op.drop_column('timestamp')

    with op.batch_alter_table('course_students', schema=None) as batch_op:
        batch_op.alter_column('student_id',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'students', ['student_id'], ['id'])

    with op.batch_alter_table('courses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('credits', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.alter_column('code',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=20),
               existing_nullable=False)
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('lecturer_id',
               existing_type=sa.VARCHAR(length=10),
               nullable=False)
        batch_op.alter_column('semester',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=20),
               nullable=True)
        batch_op.alter_column('level',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=10),
               nullable=True)
        batch_op.drop_column('units')

    with op.batch_alter_table('departments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.alter_column('faculty_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('faculties', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))

    with op.batch_alter_table('lectures', schema=None) as batch_op:
        batch_op.add_column(sa.Column('room', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.alter_column('date',
               existing_type=sa.DATETIME(),
               type_=sa.Date(),
               existing_nullable=False)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('day_of_week')
        batch_op.drop_column('lecturer_id')

    with op.batch_alter_table('login_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('action', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('details', sa.String(length=255), nullable=True))
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.drop_column('user_agent')

    with op.batch_alter_table('system_settings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('key', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('value', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('value_type', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('category', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('is_public', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_by_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('updated_by_id', sa.Integer(), nullable=True))
        batch_op.create_unique_constraint(None, ['key'])
        batch_op.create_foreign_key(None, 'users', ['created_by_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['updated_by_id'], ['id'])
        batch_op.drop_column('version')
        batch_op.drop_column('attendance_threshold')
        batch_op.drop_column('late_threshold')
        batch_op.drop_column('registration_mode')
        batch_op.drop_column('last_hardware_check')
        batch_op.drop_column('system_name')
        batch_op.drop_column('hardware_connected')
        batch_op.drop_column('last_updated')
        batch_op.drop_column('semester')
        batch_op.drop_column('academic_year')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('system_settings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('academic_year', sa.VARCHAR(length=20), nullable=True))
        batch_op.add_column(sa.Column('semester', sa.VARCHAR(length=20), nullable=True))
        batch_op.add_column(sa.Column('last_updated', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('hardware_connected', sa.BOOLEAN(), nullable=True))
        batch_op.add_column(sa.Column('system_name', sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(sa.Column('last_hardware_check', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('registration_mode', sa.BOOLEAN(), nullable=True))
        batch_op.add_column(sa.Column('late_threshold', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('attendance_threshold', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('version', sa.VARCHAR(length=20), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('updated_by_id')
        batch_op.drop_column('created_by_id')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('is_public')
        batch_op.drop_column('category')
        batch_op.drop_column('description')
        batch_op.drop_column('value_type')
        batch_op.drop_column('value')
        batch_op.drop_column('key')

    with op.batch_alter_table('login_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_agent', sa.VARCHAR(length=255), nullable=True))
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.drop_column('details')
        batch_op.drop_column('action')

    with op.batch_alter_table('lectures', schema=None) as batch_op:
        batch_op.add_column(sa.Column('lecturer_id', sa.VARCHAR(length=10), nullable=False))
        batch_op.add_column(sa.Column('day_of_week', sa.VARCHAR(length=10), nullable=False))
        batch_op.create_foreign_key(None, 'users', ['lecturer_id'], ['id'])
        batch_op.alter_column('date',
               existing_type=sa.Date(),
               type_=sa.DATETIME(),
               existing_nullable=False)
        batch_op.drop_column('notes')
        batch_op.drop_column('status')
        batch_op.drop_column('is_active')
        batch_op.drop_column('description')
        batch_op.drop_column('room')

    with op.batch_alter_table('faculties', schema=None) as batch_op:
        batch_op.drop_column('is_active')
        batch_op.drop_column('description')

    with op.batch_alter_table('departments', schema=None) as batch_op:
        batch_op.alter_column('faculty_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('is_active')
        batch_op.drop_column('description')

    with op.batch_alter_table('courses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('units', sa.INTEGER(), nullable=False))
        batch_op.alter_column('level',
               existing_type=sa.String(length=10),
               type_=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('semester',
               existing_type=sa.String(length=20),
               type_=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('lecturer_id',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('code',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
        batch_op.drop_column('is_active')
        batch_op.drop_column('credits')

    with op.batch_alter_table('course_students', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['student_id'], ['id'])
        batch_op.alter_column('student_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)

    with op.batch_alter_table('attendances', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timestamp', sa.DATETIME(), nullable=False))
        batch_op.add_column(sa.Column('course_id', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'courses', ['course_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['student_id'], ['id'])
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('student_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=10),
               existing_nullable=False)
        batch_op.drop_column('notes')
        batch_op.drop_column('device_info')
        batch_op.drop_column('longitude')
        batch_op.drop_column('latitude')
        batch_op.drop_column('marked_by_id')
        batch_op.drop_column('marked_at')

    with op.batch_alter_table('activity_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('activity_type', sa.VARCHAR(length=50), nullable=False))
        batch_op.add_column(sa.Column('description', sa.VARCHAR(length=255), nullable=False))
        batch_op.add_column(sa.Column('category', sa.VARCHAR(length=50), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
        batch_op.drop_column('error_message')
        batch_op.drop_column('status')
        batch_op.drop_column('resource_id')
        batch_op.drop_column('resource_type')
        batch_op.drop_column('ip_address')
        batch_op.drop_column('action')

    op.drop_table('notifications')
    op.drop_table('students')
    # ### end Alembic commands ###
